package Quiz;


/**
* Quiz/_QuizServerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../Quiz.idl
* Freitag, 11. Oktober 2013 17:49 Uhr MESZ
*/


/*
	 * Interface for the quiz server object. This interface provides all
	 * methods, that can used by clients to play the game.
	 */
public class _QuizServerStub extends org.omg.CORBA.portable.ObjectImpl implements Quiz.QuizServer
{


  /*
  		 * Returns a random question to the client. Note: return just a
  		 * question without the correct answers, that means return no
  		 * complete question.
  		 */
  public boolean getQuestion (Quiz.QuestionHolder randomQuestion) throws Quiz.QuizServerPackage.QuizException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getQuestion", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                randomQuestion.value = Quiz.QuestionHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Quiz/QuizServer/QuizException:1.0"))
                    throw Quiz.QuizServerPackage.QuizExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getQuestion (randomQuestion        );
            } finally {
                _releaseReply ($in);
            }
  } // getQuestion


  /*
  		 * Method for creating a new question on the server object. The
  		 * CompleteQuestion object is created on the client and sent to the
  		 * server by using this method. The server saves this question.
  		 *
  		 * The method returns the ID of the create question.
  		 */
  public int insertQuestion (Quiz.CompleteQuestion question) throws Quiz.QuizServerPackage.QuizException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("insertQuestion", true);
                Quiz.CompleteQuestionHelper.write ($out, question);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Quiz/QuizServer/QuizException:1.0"))
                    throw Quiz.QuizServerPackage.QuizExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return insertQuestion (question        );
            } finally {
                _releaseReply ($in);
            }
  } // insertQuestion


  /*
  		 * Method for answering a question with a given question ID. The server
  		 * will check the answers and return true or false. The correct answers
  		 * should be written in the out correct parameters.
  		 */
  public boolean answerQuestion (int questionId, char[] answer, Quiz.QuizServerPackage.answersIdsHolder correct) throws Quiz.QuizServerPackage.QuizException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("answerQuestion", true);
                $out.write_long (questionId);
                Quiz.QuizServerPackage.answersIdsHelper.write ($out, answer);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                correct.value = Quiz.QuizServerPackage.answersIdsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Quiz/QuizServer/QuizException:1.0"))
                    throw Quiz.QuizServerPackage.QuizExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return answerQuestion (questionId, answer, correct        );
            } finally {
                _releaseReply ($in);
            }
  } // answerQuestion


  /*
  		 * Deletes the question with the given ID.
  		 */
  public int deleteQuestion (int questionId) throws Quiz.QuizServerPackage.QuizException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("deleteQuestion", true);
                $out.write_long (questionId);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Quiz/QuizServer/QuizException:1.0"))
                    throw Quiz.QuizServerPackage.QuizExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return deleteQuestion (questionId        );
            } finally {
                _releaseReply ($in);
            }
  } // deleteQuestion

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Quiz/QuizServer:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _QuizServerStub
